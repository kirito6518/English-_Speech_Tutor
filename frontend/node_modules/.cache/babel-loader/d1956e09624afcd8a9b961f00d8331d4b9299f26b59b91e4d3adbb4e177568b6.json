{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport NavbarPage from './NavbarPage.vue';\nimport AudioRecorder from './AudioRecorder.vue';\nimport axios from 'axios';\nexport default {\n  name: 'FeihuaMode',\n  components: {\n    NavbarPage,\n    AudioRecorder\n  },\n  setup() {\n    // 游戏数据\n    const showKeyword = ref(false);\n    const showGameStatus = ref(false);\n    const showInput = ref(false);\n    const showOverlay = ref(false);\n    const gameStarted = ref(false);\n    const messages = ref([]);\n    const userInput = ref(\"\");\n    const currentKeyword = ref(\"\");\n    const currentLevel = ref(1);\n    const levelTarget = ref(\"成功对答包含关键字的诗句\");\n    const correctAnswers = ref(0);\n    const judgeResult = ref(\"\");\n    const sessionId = ref(\"\"); // 保存会话ID\n    const errorMessage = ref(\"\");\n\n    // 创建axios实例\n    const api = axios.create({\n      baseURL: '',\n      // 使用相对路径，vue.config.js中已配置代理\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // 开始游戏，创建新游戏\n    const startGame = async () => {\n      try {\n        // 调用飞花令创建游戏接口\n        const response = await api.post('/api/feihualing/create', {}, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const gameData = response.data;\n\n        // 保存会话ID和关键字\n        sessionId.value = gameData.session_id;\n        currentKeyword.value = gameData.keyword;\n\n        // 显示游戏初始消息\n        messages.value.push({\n          type: 'ai',\n          text: `欢迎参加飞花令游戏！本次关键字是\"${currentKeyword.value}\"，请说出一句包含\"${currentKeyword.value}\"字的诗句。`\n        });\n\n        // 更新游戏状态\n        gameStarted.value = true;\n        showGameStatus.value = true;\n        showInput.value = true;\n        showKeyword.value = true;\n        correctAnswers.value = 0;\n        errorMessage.value = \"\";\n      } catch (error) {\n        console.error(\"开始游戏失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '开始游戏失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 提交用户回答\n    const submitResponse = async () => {\n      if (!userInput.value.trim()) return;\n\n      // 添加用户回答到消息列表\n      messages.value.push({\n        type: 'user',\n        text: userInput.value\n      });\n      const userResponseText = userInput.value;\n      userInput.value = ''; // 清空输入框\n\n      try {\n        // 提交用户回答到后端\n        const response = await api.post('/api/feihualing/submit', {\n          session_id: sessionId.value,\n          user_response: userResponseText\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = response.data;\n\n        // 处理不同状态的响应\n        if (result.status === 'success') {\n          // AI成功回答\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n\n          // 更新正确回答数\n          correctAnswers.value++;\n          errorMessage.value = \"\";\n        } else if (result.status === 'failed') {\n          // 用户回答不包含关键字\n          messages.value.push({\n            type: 'system',\n            text: result.message\n          });\n          errorMessage.value = result.message;\n        } else if (result.status === 'ai_failed') {\n          // AI无法回答，更新关键字\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n\n          // 更新关键字\n          currentKeyword.value = result.new_keyword;\n          messages.value.push({\n            type: 'system',\n            text: `关键字已更新为\"${result.new_keyword}\"`\n          });\n          console.log(\"更换了\");\n          errorMessage.value = \"\";\n\n          // 完成一个关卡\n          showOverlay.value = true;\n        }\n\n        // 检查是否过关（此处根据实际游戏逻辑可调整）\n        if (correctAnswers.value >= 5 && !showOverlay.value) {\n          showOverlay.value = true;\n        }\n      } catch (error) {\n        console.error(\"提交回答失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '提交回答失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 处理语音识别结果\n    const handleRecognitionResult = text => {\n      if (text) {\n        userInput.value = text;\n      }\n    };\n\n    // 进入下一关\n    const nextLevel = () => {\n      currentLevel.value++;\n      showOverlay.value = false;\n\n      // 更新关卡信息\n      messages.value.push({\n        type: 'system',\n        text: `已进入第${currentLevel.value}关！继续使用关键字\"${currentKeyword.value}\"。`\n      });\n    };\n    return {\n      showKeyword,\n      showGameStatus,\n      showInput,\n      showOverlay,\n      gameStarted,\n      messages,\n      userInput,\n      currentKeyword,\n      currentLevel,\n      levelTarget,\n      correctAnswers,\n      judgeResult,\n      errorMessage,\n      startGame,\n      submitResponse,\n      nextLevel,\n      handleRecognitionResult\n    };\n  }\n};","map":{"version":3,"names":["ref","NavbarPage","AudioRecorder","axios","name","components","setup","showKeyword","showGameStatus","showInput","showOverlay","gameStarted","messages","userInput","currentKeyword","currentLevel","levelTarget","correctAnswers","judgeResult","sessionId","errorMessage","api","create","baseURL","headers","startGame","response","post","gameData","data","value","session_id","keyword","push","type","text","error","console","submitResponse","trim","userResponseText","user_response","result","status","ai_response","message","new_keyword","log","handleRecognitionResult","nextLevel"],"sources":["E:\\大二下\\用户交互技术\\new_copy (2)\\frontend\\src\\components\\FeihuaMode.vue"],"sourcesContent":["<template>\n    <div class=\"body\">\n     <NavbarPage />\n \n\n    <!-- 飞花令游戏 -->\n    <div id=\"fly\">\n      \n\n      <!-- 聊天区域 -->\n      <div class=\"chat-container\">\n        <div class=\"game-status-scroll\" v-show=\"showGameStatus || showKeyword\">\n          <div class=\"scroll-content\">\n            <div class=\"scroll-item\" v-show=\"showKeyword\">\n              <span class=\"scroll-label\">关键字</span>\n              <span class=\"scroll-value\">{{ currentKeyword }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">当前关卡</span>\n              <span class=\"scroll-value\">{{ currentLevel }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">目标</span>\n              <span class=\"scroll-value\">{{ levelTarget }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">正确回答</span>\n              <span class=\"scroll-value\">{{ correctAnswers }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"chat-content\" id=\"chat-container\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"['message', message.type]\">\n            <div class=\"message-content\">{{ message.text }}</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 开始游戏按钮 -->\n      <div class=\"start-game-container\" v-if=\"!gameStarted\">\n        <button class=\"start-game\" @click=\"startGame\">开始游戏</button>\n      </div>\n\n      <!-- 输入区域 -->\n      <div class=\"form-container\" v-show=\"showInput\">\n        <input type=\"text\" v-model=\"userInput\" class=\"form-control\" placeholder=\"输入你的回答\"\n               @keyup.enter=\"submitResponse\">\n        <button class=\"icon-button\" @click=\"submitResponse\">\n          <img :src=\"require('@/assets/image/send-icon.png')\" alt=\"发送\" class=\"button-icon\">\n        </button>\n        <AudioRecorder @recognition-complete=\"handleRecognitionResult\" />\n      </div>\n    </div>\n\n    <!-- 过关提示 -->\n    <div class=\"overlay\" v-show=\"showOverlay\">\n      <div class=\"gongxi\">恭喜你通过了第 {{ currentLevel }} 关!</div>\n      <button class=\"nextbutton\" @click=\"nextLevel\">进入下一关</button>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport NavbarPage from './NavbarPage.vue';\nimport AudioRecorder from './AudioRecorder.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'FeihuaMode',\n  components: {\n    NavbarPage,\n    AudioRecorder\n  },\n  setup() {\n    // 游戏数据\n    const showKeyword = ref(false);\n    const showGameStatus = ref(false);\n    const showInput = ref(false);\n    const showOverlay = ref(false);\n    const gameStarted = ref(false);\n    const messages = ref([]);\n    const userInput = ref(\"\");\n    \n    const currentKeyword = ref(\"\");\n    const currentLevel = ref(1);\n    const levelTarget = ref(\"成功对答包含关键字的诗句\");\n    const correctAnswers = ref(0);\n    const judgeResult = ref(\"\");\n    const sessionId = ref(\"\"); // 保存会话ID\n    const errorMessage = ref(\"\");\n\n    // 创建axios实例\n    const api = axios.create({\n      baseURL: '', // 使用相对路径，vue.config.js中已配置代理\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // 开始游戏，创建新游戏\n    const startGame = async () => {\n      try {\n        // 调用飞花令创建游戏接口\n        const response = await api.post('/api/feihualing/create', {}, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const gameData = response.data;\n        \n        // 保存会话ID和关键字\n        sessionId.value = gameData.session_id;\n        currentKeyword.value = gameData.keyword;\n        \n        // 显示游戏初始消息\n        messages.value.push({\n          type: 'ai',\n          text: `欢迎参加飞花令游戏！本次关键字是\"${currentKeyword.value}\"，请说出一句包含\"${currentKeyword.value}\"字的诗句。`\n        });\n        \n        // 更新游戏状态\n        gameStarted.value = true;\n        showGameStatus.value = true;\n        showInput.value = true;\n        showKeyword.value = true;\n        correctAnswers.value = 0;\n        errorMessage.value = \"\";\n      } catch (error) {\n        console.error(\"开始游戏失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '开始游戏失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 提交用户回答\n    const submitResponse = async () => {\n      if (!userInput.value.trim()) return;\n      \n      // 添加用户回答到消息列表\n      messages.value.push({\n        type: 'user',\n        text: userInput.value\n      });\n      \n      const userResponseText = userInput.value;\n      userInput.value = ''; // 清空输入框\n      \n      try {\n        // 提交用户回答到后端\n        const response = await api.post('/api/feihualing/submit', {\n          session_id: sessionId.value,\n          user_response: userResponseText\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        const result = response.data;\n        \n        // 处理不同状态的响应\n        if (result.status === 'success') {\n          // AI成功回答\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n          \n          // 更新正确回答数\n          correctAnswers.value++;\n          errorMessage.value = \"\";\n          \n        } else if (result.status === 'failed') {\n          // 用户回答不包含关键字\n          messages.value.push({\n            type: 'system',\n            text: result.message\n          });\n          errorMessage.value = result.message;\n          \n        } else if (result.status === 'ai_failed') {\n          // AI无法回答，更新关键字\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n          \n          // 更新关键字\n          currentKeyword.value = result.new_keyword;\n          messages.value.push({\n            type: 'system',\n            text: `关键字已更新为\"${result.new_keyword}\"`\n          });\n          console.log(\"更换了\");\n          errorMessage.value = \"\";\n          \n          // 完成一个关卡\n          showOverlay.value = true;\n        }\n        \n        // 检查是否过关（此处根据实际游戏逻辑可调整）\n        if (correctAnswers.value >= 5 && !showOverlay.value) {\n          showOverlay.value = true;\n        }\n      } catch (error) {\n        console.error(\"提交回答失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '提交回答失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 处理语音识别结果\n    const handleRecognitionResult = (text) => {\n      if (text) {\n        userInput.value = text;\n      }\n    };\n\n    // 进入下一关\n    const nextLevel = () => {\n      currentLevel.value++;\n      showOverlay.value = false;\n      \n      // 更新关卡信息\n      messages.value.push({\n        type: 'system',\n        text: `已进入第${currentLevel.value}关！继续使用关键字\"${currentKeyword.value}\"。`\n      });\n    };\n\n    return {\n      showKeyword,\n      showGameStatus,\n      showInput,\n      showOverlay,\n      gameStarted,\n      messages,\n      userInput,\n      currentKeyword,\n      currentLevel,\n      levelTarget,\n      correctAnswers,\n      judgeResult,\n      errorMessage,\n      startGame,\n      submitResponse,\n      nextLevel,\n      handleRecognitionResult\n    };\n  },\n};\n</script>\n\n<style scoped>\n.body {\n  font-family: \"宋体\", sans-serif;\n  background-color: #f8f4e9;\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url('../assets/image/he.gif');\n  background-size: cover;\n  background-position: center;\n  color: #333;\n  background-repeat: repeat;\n}\n\n.container {\n  width: 80%;\n  margin: 20px auto;\n  padding: 20px;\n  background: linear-gradient(135deg, rgba(238, 226, 203, 0.95) 0%, rgba(245, 236, 220, 0.93) 100%);\n  background-image: \n    linear-gradient(135deg, rgba(238, 226, 203, 0.95) 0%, rgba(245, 236, 220, 0.93) 100%),\n    url(\"data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23614124' fill-opacity='0.08' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\");\n  border-radius: 20px;\n  box-shadow: 0 4px 25px rgba(139, 69, 19, 0.12);\n  border: 2px solid rgba(139, 69, 19, 0.25);\n  position: relative;\n  z-index: 1;\n}\n\n.chat-container {\n  position: fixed;\n  top: 120px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 90%;\n  max-width: 900px;\n  height: calc(100vh - 280px);\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  margin: 0;\n  overflow-y: auto;\n}\n\n.game-status-scroll {\n  background: linear-gradient(to right, rgba(248, 244, 229, 0.2), rgba(248, 244, 229, 0.95), rgba(248, 244, 229, 0.2));\n  padding: 15px 30px;\n  margin: 0 auto 25px;\n  border-radius: 12px;\n  position: relative;\n  overflow: hidden;\n  border: 1px solid rgba(212, 175, 55, 0.3);\n  max-width: 90%;\n}\n\n.game-status-scroll::before,\n.game-status-scroll::after {\n  content: '❖';\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 20px;\n  color: #D4AF37;\n  opacity: 0.6;\n}\n\n.game-status-scroll::before {\n  left: 10px;\n}\n\n.game-status-scroll::after {\n  right: 10px;\n}\n\n.scroll-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  font-family: \"楷体\", \"KaiTi\", serif;\n}\n\n.scroll-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 6px;\n  padding: 5px 15px;\n  position: relative;\n}\n\n.scroll-item::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80%;\n  height: 1px;\n  background: linear-gradient(90deg, transparent, #D4AF37, transparent);\n  opacity: 0.3;\n}\n\n.scroll-label {\n  font-size: 20px;\n  color: #8B7355;\n  letter-spacing: 1px;\n}\n\n.scroll-value {\n  font-size: 20px;\n  color: #B8860B;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.scroll-divider {\n  color: #D4AF37;\n  opacity: 0.5;\n  font-size: 16px;\n  margin-top: 8px;\n}\n\n.chat-content {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n  padding-bottom: 20px;\n}\n.message {\n  display: flex;\n  max-width: 80%;\n  margin: 8px 0;\n  animation: messageFloat 0.5s ease-out;\n}\n@keyframes messageFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.message:hover {\n  transform: none;\n}\n.message-content {\n  padding: 12px 20px;\n  border-radius: 15px;\n  font-size: 18px;\n  line-height: 1.5;\n  word-break: break-word;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n.message.user {\n  margin-left: auto;\n  justify-content: flex-end;\n}\n.message.user .message-content {\n  background: linear-gradient(135deg, #D4AF37 0%, #B8960C 100%);\n  color: white;\n  border-bottom-right-radius: 5px;\n  font-family: \"宋体\", sans-serif;\n  transform-origin: right bottom;\n  animation: userFloat 0.3s ease-out;\n}\n@keyframes userFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.message.user .message-content:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n.message.ai {\n  margin-right: auto;\n  justify-content: flex-start;\n}\n.message.ai .message-content {\n  background: linear-gradient(135deg, #f5efe6 0%, #f8f4e9 100%);\n  color: #614124;\n  border: 1px solid rgba(139, 69, 19, 0.2);\n  border-bottom-left-radius: 5px;\n  font-family: \"楷体\", \"KaiTi\", serif;\n  position: relative;\n  padding-left: 35px;\n}\n.message.ai .message-content::before {\n  content: '诗';\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #8B4513;\n  font-size: 20px;\n  font-weight: bold;\n  opacity: 0.6;\n}\n.message.system .message-content {\n  background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);\n  color: #721c24;\n  border: 1px solid rgba(114, 28, 36, 0.2);\n  font-size: 16px;\n  margin: 10px auto;\n  text-align: center;\n  max-width: 60%;\n}\n.form-container {\n  position: fixed;\n  bottom: 30px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 90%;\n  max-width: 800px;\n  background-color: #fff;\n  border-radius: 30px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  padding: 15px 25px;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  z-index: 100;\n}\n.form-control {\n  flex: 1;\n  height: 45px !important;\n  padding: 0 20px;\n  border: none;\n  border-radius: 30px;\n  font-size: 16px;\n  outline: none;\n  background-color: #f5f5f5;\n}\n.icon-button {\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 8px;\n  transition: transform 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 1;\n}\n.button-icon {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n.icon-button:hover {\n  transform: scale(1.1);\n}\n.start-game-container {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  text-align: center;\n}\n.start-game {\n  padding: 15px 40px;\n  background-color: #D4AF37;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n.start-game:hover {\n  background-color: #B8960C;\n  transform: scale(1.05);\n}\n.header-container {\n  text-align: center;\n  margin-bottom: 20px;\n  padding-top: 20px;\n  position: relative;\n}\n\n.fei-container {\n  display: inline-block;\n  position: relative;\n  padding: 15px 30px;\n  background: linear-gradient(135deg, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0.9) 100%);\n  border-radius: 20px;\n  box-shadow: 0 4px 15px rgba(212, 175, 55, 0.15);\n  border: 1px solid rgba(212, 175, 55, 0.2);\n}\n\n.fei {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n\n.fei-text {\n  font-size: 46px;\n  font-weight: bold;\n  background: linear-gradient(120deg, #D4AF37 0%, #B8960C 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-family: \"楷体\", \"KaiTi\", serif;\n}\n\n.game-text {\n  font-size: 32px;\n  color: #666;\n  font-weight: normal;\n  margin-left: 5px;\n}\n\n.fei-decoration {\n  position: absolute;\n  bottom: -2px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60%;\n  height: 2px;\n  background: linear-gradient(90deg, transparent, #D4AF37, transparent);\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n}\n.gongxi {\n  color: white;\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n.nextbutton {\n  padding: 10px 20px;\n  background-color: #D4AF37;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n@keyframes recording-pulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n.recording {\n  animation: recording-pulse 1s infinite;\n  filter: invert(48%) sepia(79%) saturate(2476%) hue-rotate(330deg) !important;\n}\n/* 滚动条样式优化 */\n.chat-container::-webkit-scrollbar {\n  width: 8px;\n}\n.chat-container::-webkit-scrollbar-track {\n  background: rgba(241, 241, 241, 0.5);\n  border-radius: 4px;\n}\n.chat-container::-webkit-scrollbar-thumb {\n  background: linear-gradient(to bottom, #D4AF37, #B8960C);\n  border-radius: 4px;\n  border: 2px solid transparent;\n  background-clip: padding-box;\n}\n.chat-container::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(to bottom, #B8960C, #9A7B0A);\n  border: 2px solid transparent;\n  background-clip: padding-box;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}