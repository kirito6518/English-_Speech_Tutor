{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  id: \"fly\"\n};\nconst _hoisted_3 = {\n  class: \"chat-container\"\n};\nconst _hoisted_4 = {\n  class: \"game-status-scroll\"\n};\nconst _hoisted_5 = {\n  class: \"scroll-content\"\n};\nconst _hoisted_6 = {\n  class: \"scroll-item\"\n};\nconst _hoisted_7 = {\n  class: \"scroll-value\"\n};\nconst _hoisted_8 = {\n  class: \"scroll-item\"\n};\nconst _hoisted_9 = {\n  class: \"scroll-value\"\n};\nconst _hoisted_10 = {\n  class: \"scroll-item\"\n};\nconst _hoisted_11 = {\n  class: \"scroll-value\"\n};\nconst _hoisted_12 = {\n  class: \"scroll-item\"\n};\nconst _hoisted_13 = {\n  class: \"scroll-value\"\n};\nconst _hoisted_14 = {\n  class: \"chat-content\",\n  id: \"chat-container\"\n};\nconst _hoisted_15 = {\n  class: \"message-content\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"start-game-container\"\n};\nconst _hoisted_17 = {\n  class: \"form-container\"\n};\nconst _hoisted_18 = [\"src\"];\nconst _hoisted_19 = {\n  class: \"overlay\"\n};\nconst _hoisted_20 = {\n  class: \"gongxi\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavbarPage = _resolveComponent(\"NavbarPage\");\n  const _component_AudioRecorder = _resolveComponent(\"AudioRecorder\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavbarPage), _createCommentVNode(\" 飞花令游戏 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 聊天区域 \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"scroll-label\"\n  }, \"关键字\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($setup.currentKeyword), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vShow, $setup.showKeyword]]), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"scroll-divider\"\n  }, \"•\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"div\", _hoisted_8, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    class: \"scroll-label\"\n  }, \"当前关卡\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.currentLevel), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vShow, $setup.showGameStatus]]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"scroll-divider\"\n  }, \"•\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"div\", _hoisted_10, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n    class: \"scroll-label\"\n  }, \"目标\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_11, _toDisplayString($setup.levelTarget), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vShow, $setup.showGameStatus]]), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"scroll-divider\"\n  }, \"•\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"div\", _hoisted_12, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n    class: \"scroll-label\"\n  }, \"正确回答\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.correctAnswers), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vShow, $setup.showGameStatus]])])], 512 /* NEED_PATCH */), [[_vShow, $setup.showGameStatus || $setup.showKeyword]]), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.type])\n    }, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 开始游戏按钮 \"), !$setup.gameStarted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"start-game\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.startGame && $setup.startGame(...args))\n  }, \"开始游戏\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 输入区域 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.userInput = $event),\n    class: \"form-control\",\n    placeholder: \"输入你的回答\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $setup.submitResponse && $setup.submitResponse(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.userInput]]), _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.submitResponse && $setup.submitResponse(...args))\n  }, [_createElementVNode(\"img\", {\n    src: require('@/assets/image/send-icon.png'),\n    alt: \"发送\",\n    class: \"button-icon\"\n  }, null, 8 /* PROPS */, _hoisted_18)]), _createVNode(_component_AudioRecorder, {\n    onRecognitionComplete: $setup.handleRecognitionResult\n  }, null, 8 /* PROPS */, [\"onRecognitionComplete\"])], 512 /* NEED_PATCH */), [[_vShow, $setup.showInput]])]), _createCommentVNode(\" 过关提示 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, \"恭喜你通过了第 \" + _toDisplayString($setup.currentLevel) + \" 关!\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"nextbutton\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.nextLevel && $setup.nextLevel(...args))\n  }, \"进入下一关\")], 512 /* NEED_PATCH */), [[_vShow, $setup.showOverlay]])]);\n}","map":{"version":3,"names":["class","id","key","_createElementBlock","_hoisted_1","_createVNode","_component_NavbarPage","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","$setup","currentKeyword","showKeyword","_hoisted_8","_hoisted_9","currentLevel","showGameStatus","_hoisted_10","_hoisted_11","levelTarget","_hoisted_12","_hoisted_13","correctAnswers","_hoisted_14","_Fragment","_renderList","messages","message","index","_normalizeClass","type","_hoisted_15","text","gameStarted","_hoisted_16","onClick","_cache","args","startGame","_hoisted_17","$event","userInput","placeholder","onKeyup","_withKeys","submitResponse","src","require","alt","_hoisted_18","_component_AudioRecorder","onRecognitionComplete","handleRecognitionResult","showInput","_hoisted_19","_hoisted_20","nextLevel","showOverlay"],"sources":["E:\\大二下\\用户交互技术\\new_copy (2)\\frontend\\src\\components\\FeihuaMode.vue"],"sourcesContent":["<template>\n    <div class=\"body\">\n     <NavbarPage />\n \n\n    <!-- 飞花令游戏 -->\n    <div id=\"fly\">\n      \n\n      <!-- 聊天区域 -->\n      <div class=\"chat-container\">\n        <div class=\"game-status-scroll\" v-show=\"showGameStatus || showKeyword\">\n          <div class=\"scroll-content\">\n            <div class=\"scroll-item\" v-show=\"showKeyword\">\n              <span class=\"scroll-label\">关键字</span>\n              <span class=\"scroll-value\">{{ currentKeyword }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">当前关卡</span>\n              <span class=\"scroll-value\">{{ currentLevel }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">目标</span>\n              <span class=\"scroll-value\">{{ levelTarget }}</span>\n            </div>\n            <div class=\"scroll-divider\">•</div>\n            <div class=\"scroll-item\" v-show=\"showGameStatus\">\n              <span class=\"scroll-label\">正确回答</span>\n              <span class=\"scroll-value\">{{ correctAnswers }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"chat-content\" id=\"chat-container\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"['message', message.type]\">\n            <div class=\"message-content\">{{ message.text }}</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 开始游戏按钮 -->\n      <div class=\"start-game-container\" v-if=\"!gameStarted\">\n        <button class=\"start-game\" @click=\"startGame\">开始游戏</button>\n      </div>\n\n      <!-- 输入区域 -->\n      <div class=\"form-container\" v-show=\"showInput\">\n        <input type=\"text\" v-model=\"userInput\" class=\"form-control\" placeholder=\"输入你的回答\"\n               @keyup.enter=\"submitResponse\">\n        <button class=\"icon-button\" @click=\"submitResponse\">\n          <img :src=\"require('@/assets/image/send-icon.png')\" alt=\"发送\" class=\"button-icon\">\n        </button>\n        <AudioRecorder @recognition-complete=\"handleRecognitionResult\" />\n      </div>\n    </div>\n\n    <!-- 过关提示 -->\n    <div class=\"overlay\" v-show=\"showOverlay\">\n      <div class=\"gongxi\">恭喜你通过了第 {{ currentLevel }} 关!</div>\n      <button class=\"nextbutton\" @click=\"nextLevel\">进入下一关</button>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport NavbarPage from './NavbarPage.vue';\nimport AudioRecorder from './AudioRecorder.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'FeihuaMode',\n  components: {\n    NavbarPage,\n    AudioRecorder\n  },\n  setup() {\n    // 游戏数据\n    const showKeyword = ref(false);\n    const showGameStatus = ref(false);\n    const showInput = ref(false);\n    const showOverlay = ref(false);\n    const gameStarted = ref(false);\n    const messages = ref([]);\n    const userInput = ref(\"\");\n    \n    const currentKeyword = ref(\"\");\n    const currentLevel = ref(1);\n    const levelTarget = ref(\"成功对答包含关键字的诗句\");\n    const correctAnswers = ref(0);\n    const judgeResult = ref(\"\");\n    const sessionId = ref(\"\"); // 保存会话ID\n    const errorMessage = ref(\"\");\n\n    // 创建axios实例\n    const api = axios.create({\n      baseURL: '', // 使用相对路径，vue.config.js中已配置代理\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // 开始游戏，创建新游戏\n    const startGame = async () => {\n      try {\n        // 调用飞花令创建游戏接口\n        const response = await api.post('/api/feihualing/create', {}, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const gameData = response.data;\n        \n        // 保存会话ID和关键字\n        sessionId.value = gameData.session_id;\n        currentKeyword.value = gameData.keyword;\n        \n        // 显示游戏初始消息\n        messages.value.push({\n          type: 'ai',\n          text: `欢迎参加飞花令游戏！本次关键字是\"${currentKeyword.value}\"，请说出一句包含\"${currentKeyword.value}\"字的诗句。`\n        });\n        \n        // 更新游戏状态\n        gameStarted.value = true;\n        showGameStatus.value = true;\n        showInput.value = true;\n        showKeyword.value = true;\n        correctAnswers.value = 0;\n        errorMessage.value = \"\";\n      } catch (error) {\n        console.error(\"开始游戏失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '开始游戏失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 提交用户回答\n    const submitResponse = async () => {\n      if (!userInput.value.trim()) return;\n      \n      // 添加用户回答到消息列表\n      messages.value.push({\n        type: 'user',\n        text: userInput.value\n      });\n      \n      const userResponseText = userInput.value;\n      userInput.value = ''; // 清空输入框\n      \n      try {\n        // 提交用户回答到后端\n        const response = await api.post('/api/feihualing/submit', {\n          session_id: sessionId.value,\n          user_response: userResponseText\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        const result = response.data;\n        \n        // 处理不同状态的响应\n        if (result.status === 'success') {\n          // AI成功回答\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n          \n          // 更新正确回答数\n          correctAnswers.value++;\n          errorMessage.value = \"\";\n          \n        } else if (result.status === 'failed') {\n          // 用户回答不包含关键字\n          messages.value.push({\n            type: 'system',\n            text: result.message\n          });\n          errorMessage.value = result.message;\n          \n        } else if (result.status === 'ai_failed') {\n          // AI无法回答，更新关键字\n          messages.value.push({\n            type: 'ai',\n            text: result.ai_response\n          });\n          \n          // 更新关键字\n          currentKeyword.value = result.new_keyword;\n          messages.value.push({\n            type: 'system',\n            text: `关键字已更新为\"${result.new_keyword}\"`\n          });\n          console.log(\"更换了\");\n          errorMessage.value = \"\";\n          \n          // 完成一个关卡\n          showOverlay.value = true;\n        }\n        \n        // 检查是否过关（此处根据实际游戏逻辑可调整）\n        if (correctAnswers.value >= 5 && !showOverlay.value) {\n          showOverlay.value = true;\n        }\n      } catch (error) {\n        console.error(\"提交回答失败:\", error);\n        messages.value.push({\n          type: 'system',\n          text: '提交回答失败，请稍后再试。'\n        });\n        errorMessage.value = error.response?.data?.error || \"服务器连接失败\";\n      }\n    };\n\n    // 处理语音识别结果\n    const handleRecognitionResult = (text) => {\n      if (text) {\n        userInput.value = text;\n      }\n    };\n\n    // 进入下一关\n    const nextLevel = () => {\n      currentLevel.value++;\n      showOverlay.value = false;\n      \n      // 更新关卡信息\n      messages.value.push({\n        type: 'system',\n        text: `已进入第${currentLevel.value}关！继续使用关键字\"${currentKeyword.value}\"。`\n      });\n    };\n\n    return {\n      showKeyword,\n      showGameStatus,\n      showInput,\n      showOverlay,\n      gameStarted,\n      messages,\n      userInput,\n      currentKeyword,\n      currentLevel,\n      levelTarget,\n      correctAnswers,\n      judgeResult,\n      errorMessage,\n      startGame,\n      submitResponse,\n      nextLevel,\n      handleRecognitionResult\n    };\n  },\n};\n</script>\n\n<style scoped>\n.body {\n  font-family: \"宋体\", sans-serif;\n  background-color: #f8f4e9;\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url('../assets/image/he.gif');\n  background-size: cover;\n  background-position: center;\n  color: #333;\n  background-repeat: repeat;\n}\n\n.container {\n  width: 80%;\n  margin: 20px auto;\n  padding: 20px;\n  background: linear-gradient(135deg, rgba(238, 226, 203, 0.95) 0%, rgba(245, 236, 220, 0.93) 100%);\n  background-image: \n    linear-gradient(135deg, rgba(238, 226, 203, 0.95) 0%, rgba(245, 236, 220, 0.93) 100%),\n    url(\"data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23614124' fill-opacity='0.08' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\");\n  border-radius: 20px;\n  box-shadow: 0 4px 25px rgba(139, 69, 19, 0.12);\n  border: 2px solid rgba(139, 69, 19, 0.25);\n  position: relative;\n  z-index: 1;\n}\n\n.chat-container {\n  position: fixed;\n  top: 120px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 90%;\n  max-width: 900px;\n  height: calc(100vh - 280px);\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  margin: 0;\n  overflow-y: auto;\n}\n\n.game-status-scroll {\n  background: linear-gradient(to right, rgba(248, 244, 229, 0.2), rgba(248, 244, 229, 0.95), rgba(248, 244, 229, 0.2));\n  padding: 15px 30px;\n  margin: 0 auto 25px;\n  border-radius: 12px;\n  position: relative;\n  overflow: hidden;\n  border: 1px solid rgba(212, 175, 55, 0.3);\n  max-width: 90%;\n}\n\n.game-status-scroll::before,\n.game-status-scroll::after {\n  content: '❖';\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 20px;\n  color: #D4AF37;\n  opacity: 0.6;\n}\n\n.game-status-scroll::before {\n  left: 10px;\n}\n\n.game-status-scroll::after {\n  right: 10px;\n}\n\n.scroll-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  font-family: \"楷体\", \"KaiTi\", serif;\n}\n\n.scroll-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 6px;\n  padding: 5px 15px;\n  position: relative;\n}\n\n.scroll-item::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80%;\n  height: 1px;\n  background: linear-gradient(90deg, transparent, #D4AF37, transparent);\n  opacity: 0.3;\n}\n\n.scroll-label {\n  font-size: 20px;\n  color: #8B7355;\n  letter-spacing: 1px;\n}\n\n.scroll-value {\n  font-size: 20px;\n  color: #B8860B;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.scroll-divider {\n  color: #D4AF37;\n  opacity: 0.5;\n  font-size: 16px;\n  margin-top: 8px;\n}\n\n.chat-content {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n  padding-bottom: 20px;\n}\n.message {\n  display: flex;\n  max-width: 80%;\n  margin: 8px 0;\n  animation: messageFloat 0.5s ease-out;\n}\n@keyframes messageFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.message:hover {\n  transform: none;\n}\n.message-content {\n  padding: 12px 20px;\n  border-radius: 15px;\n  font-size: 18px;\n  line-height: 1.5;\n  word-break: break-word;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n.message.user {\n  margin-left: auto;\n  justify-content: flex-end;\n}\n.message.user .message-content {\n  background: linear-gradient(135deg, #D4AF37 0%, #B8960C 100%);\n  color: white;\n  border-bottom-right-radius: 5px;\n  font-family: \"宋体\", sans-serif;\n  transform-origin: right bottom;\n  animation: userFloat 0.3s ease-out;\n}\n@keyframes userFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.message.user .message-content:hover {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n.message.ai {\n  margin-right: auto;\n  justify-content: flex-start;\n}\n.message.ai .message-content {\n  background: linear-gradient(135deg, #f5efe6 0%, #f8f4e9 100%);\n  color: #614124;\n  border: 1px solid rgba(139, 69, 19, 0.2);\n  border-bottom-left-radius: 5px;\n  font-family: \"楷体\", \"KaiTi\", serif;\n  position: relative;\n  padding-left: 35px;\n}\n.message.ai .message-content::before {\n  content: '诗';\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #8B4513;\n  font-size: 20px;\n  font-weight: bold;\n  opacity: 0.6;\n}\n.message.system .message-content {\n  background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);\n  color: #721c24;\n  border: 1px solid rgba(114, 28, 36, 0.2);\n  font-size: 16px;\n  margin: 10px auto;\n  text-align: center;\n  max-width: 60%;\n}\n.form-container {\n  position: fixed;\n  bottom: 30px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 90%;\n  max-width: 800px;\n  background-color: #fff;\n  border-radius: 30px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  padding: 15px 25px;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  z-index: 100;\n}\n.form-control {\n  flex: 1;\n  height: 45px !important;\n  padding: 0 20px;\n  border: none;\n  border-radius: 30px;\n  font-size: 16px;\n  outline: none;\n  background-color: #f5f5f5;\n}\n.icon-button {\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 8px;\n  transition: transform 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 1;\n}\n.button-icon {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n.icon-button:hover {\n  transform: scale(1.1);\n}\n.start-game-container {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  text-align: center;\n}\n.start-game {\n  padding: 15px 40px;\n  background-color: #D4AF37;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n.start-game:hover {\n  background-color: #B8960C;\n  transform: scale(1.05);\n}\n.header-container {\n  text-align: center;\n  margin-bottom: 20px;\n  padding-top: 20px;\n  position: relative;\n}\n\n.fei-container {\n  display: inline-block;\n  position: relative;\n  padding: 15px 30px;\n  background: linear-gradient(135deg, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0.9) 100%);\n  border-radius: 20px;\n  box-shadow: 0 4px 15px rgba(212, 175, 55, 0.15);\n  border: 1px solid rgba(212, 175, 55, 0.2);\n}\n\n.fei {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n\n.fei-text {\n  font-size: 46px;\n  font-weight: bold;\n  background: linear-gradient(120deg, #D4AF37 0%, #B8960C 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-family: \"楷体\", \"KaiTi\", serif;\n}\n\n.game-text {\n  font-size: 32px;\n  color: #666;\n  font-weight: normal;\n  margin-left: 5px;\n}\n\n.fei-decoration {\n  position: absolute;\n  bottom: -2px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60%;\n  height: 2px;\n  background: linear-gradient(90deg, transparent, #D4AF37, transparent);\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n}\n.gongxi {\n  color: white;\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n.nextbutton {\n  padding: 10px 20px;\n  background-color: #D4AF37;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n@keyframes recording-pulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n.recording {\n  animation: recording-pulse 1s infinite;\n  filter: invert(48%) sepia(79%) saturate(2476%) hue-rotate(330deg) !important;\n}\n/* 滚动条样式优化 */\n.chat-container::-webkit-scrollbar {\n  width: 8px;\n}\n.chat-container::-webkit-scrollbar-track {\n  background: rgba(241, 241, 241, 0.5);\n  border-radius: 4px;\n}\n.chat-container::-webkit-scrollbar-thumb {\n  background: linear-gradient(to bottom, #D4AF37, #B8960C);\n  border-radius: 4px;\n  border: 2px solid transparent;\n  background-clip: padding-box;\n}\n.chat-container::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(to bottom, #B8960C, #9A7B0A);\n  border: 2px solid transparent;\n  background-clip: padding-box;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}