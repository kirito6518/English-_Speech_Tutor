{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-body\"\n};\nconst _hoisted_2 = {\n  class: \"login-container\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  type: \"submit\",\n  class: \"login-button\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.isRegister ? '注册' : '登录'), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers($event => $data.isRegister ? $options.handleRegister() : $options.handleLogin(), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    id: \"username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    id: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), $data.isRegister ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"确认密码\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    id: \"confirmPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", _hoisted_6, _toDisplayString($data.isRegister ? '注册' : '登录'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"toggle-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.toggleMode && $options.toggleMode(...args))\n  }, _toDisplayString($data.isRegister ? '已有账号？登录' : '没有账号？注册'), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","key","type","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","isRegister","onSubmit","_cache","_withModifiers","$event","$options","handleRegister","handleLogin","_hoisted_3","for","username","id","required","_hoisted_4","password","_hoisted_5","confirmPassword","_createCommentVNode","_hoisted_6","errorMessage","_hoisted_7","onClick","args","toggleMode"],"sources":["D:\\HCI_FINAL\\new_copy\\frontend\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\n    <div class=\"login-body\">\n      <div class=\"login-container\">\n        <h2>{{ isRegister ? '注册' : '登录' }}</h2>\n        <form @submit.prevent=\"isRegister ? handleRegister() : handleLogin()\">\n          <div class=\"form-group\">\n            <label for=\"username\">用户名</label>\n            <input type=\"text\" v-model=\"username\" id=\"username\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">密码</label>\n            <input type=\"password\" v-model=\"password\" id=\"password\" required />\n          </div>\n          <div v-if=\"isRegister\" class=\"form-group\">\n            <label for=\"confirmPassword\">确认密码</label>\n            <input type=\"password\" v-model=\"confirmPassword\" id=\"confirmPassword\" required />\n          </div>\n          <button type=\"submit\" class=\"login-button\">{{ isRegister ? '注册' : '登录' }}</button>\n        </form>\n        <p class=\"error-message\" v-if=\"errorMessage\">{{ errorMessage }}</p>\n        <button class=\"toggle-button\" @click=\"toggleMode\">\n          {{ isRegister ? '已有账号？登录' : '没有账号？注册' }}\n        </button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        errorMessage: '',\n        isRegister: false\n      };\n    },\n    methods: {\n      async handleLogin() {\n        // 硬编码的登录验证逻辑\n        if (this.username === '123' && this.password === '123') {\n          this.$router.push('/home'); // 登录成功后跳转到主页\n        } else {\n          this.errorMessage = '用户名或密码错误';\n        }\n      },\n      async handleRegister() {\n        if (this.password !== this.confirmPassword) {\n          this.errorMessage = '密码和确认密码不匹配';\n          return;\n        }\n\n        // 注册逻辑\n        this.errorMessage = '注册成功！'; // 示例反馈\n        // 这里可以添加实际的注册逻辑，例如发送请求到后端\n      },\n      toggleMode() {\n        this.isRegister = !this.isRegister; // 切换登录和注册模式\n        this.errorMessage = ''; // 清空错误信息\n        this.username = '';\n        this.password = '';\n        this.confirmPassword = ''; // 清空确认密码\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .login-body {\n    font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n    background: url('../assets/image/zhubeijing.gif') no-repeat center center fixed;\n    background-size: cover;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .login-container {\n    background: rgba(255, 255, 255, 0.9);\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);\n    width: 380px;\n    max-width: 100%;\n    text-align: center;\n  }\n  \n  h2 {\n    font-size: 24px;\n    font-weight: 600;\n    margin-bottom: 20px;\n    color: #333;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n  \n  label {\n    display: inline-block;\n    margin-right: 20px;\n  \n    color: #555;\n    margin-bottom: 8px;\n    text-align: left;\n    width: 100%;\n  }\n  \n  input {\n    width: 355px;\n    padding: 12px;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: #f9f9f9;\n    font-size: 16px;\n    margin-bottom: 15px;\n    transition: all 0.3s ease-in-out;\n  }\n  \n  input:focus {\n    border-color: #D4AF37;\n    outline: none;\n    background-color: #fff;\n  }\n  \n  .login-button {\n    width: 100%;\n    padding: 12px;\n    background-color: #D4AF37;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 16px;\n    transition: all 0.3s ease;\n  }\n  \n  .login-button:hover {\n    background-color: #b88e14;\n  }\n  \n  .toggle-button {\n    width: 100%;\n    padding: 10px;\n    background-color: transparent;\n    color: #B8860B;\n    border: none;\n    font-size: 14px;\n    cursor: pointer;\n    margin-top: 15px;\n    transition: color 0.3s ease;\n  }\n  \n  .toggle-button:hover {\n    color: #D4AF37;\n  }\n  \n  .error-message {\n    color: red;\n    margin-top: 10px;\n    font-size: 14px;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAiB;;EAGnBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;EATjCC,GAAA;EAaiCD,KAAK,EAAC;;;EAIrBE,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;;EAjBtCC,GAAA;EAmBWD,KAAK,EAAC;;;uBAlBbG,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJD,mBAAA,CAAuC,YAAAE,gBAAA,CAAhCC,KAAA,CAAAC,UAAU,gCACjBJ,mBAAA,CAcO;IAdAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJrBC,cAAA,CAAAC,MAAA,IAI+BL,KAAA,CAAAC,UAAU,GAAGK,QAAA,CAAAC,cAAc,KAAKD,QAAA,CAAAE,WAAW;MAChEX,mBAAA,CAGM,OAHNY,UAGM,G,0BAFJZ,mBAAA,CAAiC;IAA1Ba,GAAG,EAAC;EAAU,GAAC,KAAG,sB,gBACzBb,mBAAA,CAA+D;IAAxDH,IAAI,EAAC,MAAM;IAP9B,uBAAAS,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAOwCL,KAAA,CAAAW,QAAQ,GAAAN,MAAA;IAAEO,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAxBb,KAAA,CAAAW,QAAQ,E,KAEtCd,mBAAA,CAGM,OAHNiB,UAGM,G,0BAFJjB,mBAAA,CAAgC;IAAzBa,GAAG,EAAC;EAAU,GAAC,IAAE,sB,gBACxBb,mBAAA,CAAmE;IAA5DH,IAAI,EAAC,UAAU;IAXlC,uBAAAS,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAW4CL,KAAA,CAAAe,QAAQ,GAAAV,MAAA;IAAEO,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAxBb,KAAA,CAAAe,QAAQ,E,KAE/Bf,KAAA,CAAAC,UAAU,I,cAArBN,mBAAA,CAGM,OAHNqB,UAGM,G,0BAFJnB,mBAAA,CAAyC;IAAlCa,GAAG,EAAC;EAAiB,GAAC,MAAI,sB,gBACjCb,mBAAA,CAAiF;IAA1EH,IAAI,EAAC,UAAU;IAflC,uBAAAS,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAe4CL,KAAA,CAAAiB,eAAe,GAAAZ,MAAA;IAAEO,EAAE,EAAC,iBAAiB;IAACC,QAAQ,EAAR;iDAAtCb,KAAA,CAAAiB,eAAe,E,OAf3DC,mBAAA,gBAiBUrB,mBAAA,CAAkF,UAAlFsB,UAAkF,EAAApB,gBAAA,CAApCC,KAAA,CAAAC,UAAU,+B,4BAE3BD,KAAA,CAAAoB,YAAY,I,cAA3CzB,mBAAA,CAAmE,KAAnE0B,UAAmE,EAAAtB,gBAAA,CAAnBC,KAAA,CAAAoB,YAAY,oBAnBpEF,mBAAA,gBAoBQrB,mBAAA,CAES;IAFDL,KAAK,EAAC,eAAe;IAAE8B,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAoB,IAAA,KAAEjB,QAAA,CAAAkB,UAAA,IAAAlB,QAAA,CAAAkB,UAAA,IAAAD,IAAA,CAAU;sBAC3CvB,KAAA,CAAAC,UAAU,yC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}